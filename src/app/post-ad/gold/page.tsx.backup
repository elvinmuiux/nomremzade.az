'use client';

import React, { useState, useEffect } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import PageTemplate from '@/components/layout/PageTemplate/PageTemplate';
import PaymentForm from '@/components/ui/PaymentForm/PaymentForm';
import SecureDatabase, { User, PremiumAd } from '@/lib/database';
import styles from './page.module.css';

export default function PremiumAdPage() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');
  const [showPayment, setShowPayment] = useState(false);
  const [formData, setFormData] = useState({
    phoneNumber: '',
    operator: '',
    price: '',
    contactPhone: '',
    whatsappNumber: '',
    description: ''
  });

  useEffect(() => {
    // Check if user is logged in
    const userData = localStorage.getItem('currentUser');
    if (userData) {
      try {
        const user = JSON.parse(userData);
        setCurrentUser(user);
      } catch (error) {
        console.error('Error parsing user data:', error);
        localStorage.removeItem('currentUser');
      }
    }

    // Check for success messages from registration
    const registered = searchParams.get('registered');
    const paymentSuccess = searchParams.get('payment');
    const loggedIn = searchParams.get('loggedIn');
    
    if (registered === 'true' && paymentSuccess === 'success') {
      setSuccessMessage('Qeydiyyat və ödəmə uğurla tamamlandı! İndi premium elanınızı yerləşdirə bilərsiniz.');
    } else if (registered === 'true') {
      setSuccessMessage('Qeydiyyat uğurla tamamlandı! Premium elan yerləşdirmək üçün ödəmə tələb olunur.');
    } else if (loggedIn === 'true') {
      setSuccessMessage('Giriş uğurla həyata keçirildi! Premium elanınızı yerləşdirin.');
    }
  }, [searchParams]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handlePremiumSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!currentUser) {
      router.push('/register');
      return;
    }

    // Check if user has premium status (paid)
    if (!currentUser.isPremium) {
      setShowPayment(true);
      return;
    }

    setIsLoading(true);

    // Simulate processing
    setTimeout(() => {
      const newAd: PremiumAd = {
        id: `premium_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        userId: currentUser.id,
        phoneNumber: formData.phoneNumber,
        operator: formData.operator,
        description: formData.description || undefined,
        price: formData.price ? parseInt(formData.price) : undefined,
        createdAt: new Date().toISOString(),
        isActive: true,
        paymentId: `existing_${currentUser.id}` // Reference to user's payment
      };

      // Save ad data using SecureDatabase
      SecureDatabase.savePremiumAd(newAd);

      setIsLoading(false);
      setSuccessMessage('Premium elanınız uğurla yerləşdirildi! 30 gün aktiv olacaq.');
      
      // Reset form
      setFormData({
        phoneNumber: '',
        operator: '',
        price: '',
        contactPhone: '',
        whatsappNumber: '',
        description: ''
      });

      // Redirect to ads display page after 3 seconds
      setTimeout(() => {
        router.push('/numbers?showPremium=true');
      }, 3000);
    }, 2000);
  };

  const handlePaymentSuccess = () => {
    // Process payment and update user status
    if (currentUser) {
      const updatedUser = { ...currentUser, isPremium: true };
      setCurrentUser(updatedUser);
      localStorage.setItem('currentUser', JSON.stringify(updatedUser));
      SecureDatabase.saveUser(updatedUser);
    }
    setShowPayment(false);
    setSuccessMessage('Ödəmə uğurla tamamlandı! İndi premium elanınızı yerləşdirə bilərsiniz.');
  };

  const handlePaymentError = (error: string) => {
    setSuccessMessage(`Ödəmə xətası: ${error}`);
  };

  const handlePaymentCancel = () => {
    setShowPayment(false);
  };

  if (!currentUser) {
    return (
      <PageTemplate showTopNav={false}>
        <div className={styles.adFormPage}>
          <section className={styles.section}>
            <h1 className={styles.pageTitle}>Premium Elan Yerləşdir</h1>
            <p className={styles.pageDescription}>
              Premium elanınızla nömrənizi ən yaxşı şəkildə təqdim edin.
            </p>
          </section>

          <section className={styles.section}>
            <div className={styles.authRequired}>
              <span className={styles.authIcon}>🔐</span>
              <h3>Qeydiyyat Tələb Olunur</h3>
              <p>Premium elan yerləşdirmək üçün əvvəlcə qeydiyyatdan keçməlisiniz.</p>
              <div className={styles.authButtons}>
                <button 
                  onClick={() => router.push('/register')} 
                  className={styles.registerBtn}
                >
                  Qeydiyyat
                </button>
                <button 
                  onClick={() => router.push('/login')} 
                  className={styles.loginBtn}
                >
                  Giriş
                </button>
              </div>
            </div>
          </section>
        </div>
      </PageTemplate>
    );
  }
  
  return (
    <PageTemplate showTopNav={false}>
      <div className={styles.adFormPage}>
        <section className={styles.section}>
          <h1 className={styles.pageTitle}>Premium Elan Yerləşdir</h1>
          <p className={styles.pageDescription}>
            Premium elanınızla nömrənizi ən yaxşı şəkildə təqdim edin.
          </p>
        </section>

        {/* User welcome message */}
        <section className={styles.section}>
          <div className={styles.welcomeMessage}>
            <span className={styles.welcomeIcon}>👋</span>
            Xoş gəlmisiniz, <strong>{currentUser.fullName}</strong>!
            {currentUser.isPremium ? (
              <span className={styles.premiumBadge}>⭐ Premium Üzv</span>
            ) : (
              <span className={styles.pendingBadge}>🔓 Ödəmə Gözləyir</span>
            )}
          </div>
        </section>

        {/* Success/Error Messages */}
        {successMessage && (
          <section className={styles.section}>
            <div className={styles.successMessage}>
              <span className={styles.successIcon}>✅</span>
              {successMessage}
            </div>
          </section>
        )}

        <section className={styles.section}>
          <div className={styles.formContainer}>
            <form onSubmit={handlePremiumSubmit} className={styles.adForm}>
              <div className={styles.formGroup}>
                <label htmlFor="phoneNumber" className={styles.label}>
                  Telefon Nömrəsi *
                </label>
                <input
                  type="tel"
                  id="phoneNumber"
                  name="phoneNumber"
                  value={formData.phoneNumber}
                  onChange={handleInputChange}
                  placeholder="050-444-44-22"
                  className={styles.input}
                  required
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="operator" className={styles.label}>
                  Operator *
                </label>
                <select 
                  id="operator" 
                  name="operator" 
                  value={formData.operator}
                  onChange={handleInputChange}
                  className={styles.select} 
                  required
                >
                  <option value="">Operator seçin</option>
                  <option value="azercell">Azərcell</option>
                  <option value="bakcell">Bakcell</option>
                  <option value="nar-mobile">Nar Mobile</option>
                  <option value="naxtel">Naxtel</option>
                </select>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="price" className={styles.label}>
                  Qiymət (AZN) *
                </label>
                <input
                  type="number"
                  id="price"
                  name="price"
                  value={formData.price}
                  onChange={handleInputChange}
                  placeholder="500"
                  className={styles.input}
                  min="1"
                  required
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="contactPhone" className={styles.label}>
                  Əlaqə Nömrəsi *
                </label>
                <input
                  type="tel"
                  id="contactPhone"
                  name="contactPhone"
                  value={formData.contactPhone}
                  onChange={handleInputChange}
                  placeholder="050-266-63-66"
                  className={styles.input}
                  required
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="whatsappNumber" className={styles.label}>
                  WhatsApp Nömrəsi
                </label>
                <input
                  type="tel"
                  id="whatsappNumber"
                  name="whatsappNumber"
                  value={formData.whatsappNumber}
                  onChange={handleInputChange}
                  placeholder="050-444-44-22"
                  className={styles.input}
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="description" className={styles.label}>
                  Təsvir
                </label>
                <textarea
                  id="description"
                  name="description"
                  value={formData.description}
                  onChange={handleInputChange}
                  placeholder="Nömrəniz haqqında əlavə məlumat..."
                  className={styles.textarea}
                  rows={4}
                ></textarea>
              </div>

              <div className={styles.priceInfo}>
                <h3>Premium Elan - 5 AZN</h3>
                <ul>
                  <li>30 gün aktiv</li>
                  <li>Səhifə yuxarısında göstərilir</li>
                  <li>Əlavə rəng vurğusu</li>
                  <li>Sosial media paylaşımı</li>
                  <li>WhatsApp dəstəyi</li>
                </ul>
              </div>

              <button 
                type="submit" 
                className={styles.submitButton}
                disabled={isLoading}
              >
                {isLoading ? (
                  <>
                    <span className={styles.spinner}></span>
                    Yerləşdirilir...
                  </>
                ) : currentUser?.isPremium ? (
                  'Premium Elan Yerləşdir'
                ) : (
                  'Ödəmə Et və Elanı Yerləşdir'
                )}
              </button>
            </form>
          </div>
        </section>

        {/* Payment Modal */}
        {showPayment && (
          <PaymentForm
            amount={5.00}
            currency="AZN"
            onPaymentSuccess={handlePaymentSuccess}
            onPaymentError={handlePaymentError}
            onCancel={handlePaymentCancel}
          />
        )}
      </div>
    </PageTemplate>
  );
}
